{"name":"jRaiz","tagline":"Basic HTML/CSS constructor from JavaScript configurations.","body":"# jRaiz\r\nBasic HTML/CSS constructor from JavaScript configurations.\r\n\r\n# Features\r\n- HTML/CSS from JavaScript objects;\r\n- pre-configured objects for logo, headers, forms and more;\r\n- Dynamic css variables and expressions;\r\n\r\n# Donate\r\nDonate via <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=WEMSKL3F4GNEU&lc=US&item_name=jRaiz&item_number=jraiz&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted\" target=\"_blank\">PayPal</a>.\r\n\r\n# Files\r\nThe file <code>index.html</code> comes without a <code>&lt;body&gt;</code> tag.<br>\r\nThe file <code>js/jraiz.js</code> is the base code.<br>\r\nThe file <code>js/script.js</code> holds the user code.<br>\r\nThe file <code>js/basic notation.js</code> holds some ideas to be implemented in the future.<br>\r\n\r\n# Basics\r\nYou add HTML structure and CSS rules from javascript objects, like:\r\n\r\n```javascript\r\nobj = {\r\n  div : { // GENERATES <div class=\"superDiv active\" id=\"header\" onclick=\"function(ev){...}\">...</div>\r\n    $ : {\r\n      classes : \"superDiv active\",\r\n      id : \"header\",\r\n      onclick : function(ev){\r\n        alert(\"click\");\r\n        console.log(ev);\r\n      }\r\n    },\r\n    someLink : { // GENERATES <a class=\"someLink\" href=\"url.com\">First link</a>\r\n      $ : {\r\n        href : \"url.com\",\r\n        text : \"First link\"\r\n      }\r\n    },\r\n    greenLink : { // GENERATES <a class=\"greenLink\" href=\"green.link.com\">Click here!</a>\r\n      $ : {\r\n        href : \"green.link.com\",\r\n        target : \"_blank\",\r\n        text : \"Click here!\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nj.nodes(obj);\r\n```\r\n\r\nThe object $ holds configuration.\r\n\r\nThe name of the element could be it's tag name or some class name.\r\n\r\n# Dynamic CSS variables and expressions\r\nWhen only var, you add a word starting with $: <code>\"propertyValue $variable\"</code>.\r\n\r\nWhen expression, you use brackets: <code>\"othProp thrdProp {$var1 * $var2 + 584}\"</code>.\r\n\r\n```javascript\r\nobj = {\r\n  $ : {\r\n    $primColor : \"#AAA\",\r\n    $secndColor : 753\r\n  },\r\n  header : {\r\n    $ : {\r\n      classes : \"cols col_12\",\r\n      css : {\r\n        border : \"solid 1px $primColor\", //OUTPUT: solid 1px #AAA\r\n        color : \"{$primColor}BCE\" //OUTPUT: #AAABCE\r\n      }\r\n    }\r\n  },\r\n  main : {\r\n    $ : {\r\n      classes : \"cols col_8\",\r\n      css : {\r\n        backgroundColor : \"#{$secndColor * 258}\" //OUTPUT: #194274\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nYou can change any variable, accessing the object j.vars.$nameVariable:\r\n\r\nThe code <code>j.vars.$primColor = \"#BBB\"</code> changes every object style property that has $primColor assigned to it.\r\n","google":"UA-7963557-6","note":"Don't delete this file! It's used internally to help with page regeneration."}