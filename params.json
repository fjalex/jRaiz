{"name":"jRaiz","tagline":"Basic HTML/CSS constructor from JavaScript configurations.","body":"# jRaiz\r\nBasic HTML/CSS constructor from JavaScript configurations.\r\n\r\n# Donate\r\nDonate via <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=WEMSKL3F4GNEU&lc=US&item_name=jRaiz&item_number=jraiz&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted\" target=\"_blank\">PayPal</a>.\r\n\r\n# Why\r\nAngular is too big and complex.<br>\r\njQuery is very nice, but I need to learn how the DOM works...<br>\r\n\r\n# Files\r\nThe file <code>index.html</code> comes without a <code>&lt;body&gt;</code> tag.<br>\r\nThe file <code>js/jraiz.js</code> is the base code.<br>\r\nThe file <code>js/script.js</code> holds the user code.<br>\r\nThe file <code>js/basic notation.js</code> holds some ideas to be implemented in the future.<br>\r\n\r\n# Basics\r\nYou add HTML structure and CSS rules from javascript objects, like:\r\n\r\n```\r\nobj = {\r\n  div : {\r\n    $ : {\r\n      classes : \"superDiv active\",\r\n      id : \"header\",\r\n      onclick : function(ev){\r\n        alert(\"click\");\r\n        console.log(ev);\r\n      }\r\n    },\r\n    '.someLink' : {\r\n      $ : {\r\n        href : \"url.com\"\r\n      }\r\n    },\r\n    '.greenLink' : {\r\n      $ : {\r\n        href : \"green.link.com\",\r\n        target : \"_blank\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThe object $ holds configuration.\r\nThe name of the element could be it's tag name or some class name.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}